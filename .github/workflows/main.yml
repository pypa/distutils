name: tests

on: [push, pull_request]

permissions:
  contents: read

env:
  # Environment variables to support color support (jaraco/skeleton#66):
  # Request colored output from CLI tools supporting it. Different tools
  # interpret the value differently. For some, just being set is sufficient.
  # For others, it must be a non-zero integer. For yet others, being set
  # to a non-empty value is sufficient. For tox, it must be one of
  # <blank>, 0, 1, false, no, off, on, true, yes. The only enabling value
  # in common is "1".
  FORCE_COLOR: 1
  # MyPy's color enforcement (must be a non-zero number)
  MYPY_FORCE_COLOR: -42
  # Recognized by the `py` package, dependency of `pytest` (must be "1")
  PY_COLORS: 1
  # Make tox-wrapped tools see color requests
  TOX_TESTENV_PASSENV: >-
    FORCE_COLOR
    MYPY_FORCE_COLOR
    NO_COLOR
    PY_COLORS
    PYTEST_THEME
    PYTEST_THEME_MODE

  # Suppress noisy pip warnings
  PIP_DISABLE_PIP_VERSION_CHECK: 'true'
  PIP_NO_PYTHON_VERSION_WARNING: 'true'
  PIP_NO_WARN_SCRIPT_LOCATION: 'true'

  # Disable the spinner, noise in GHA; TODO(webknjaz): Fix this upstream
  # Must be "1".
  TOX_PARALLEL_NO_SPINNER: 1

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  test:
    strategy:
      matrix:
        python:
        - "3.8"
        - "3.11"
        - "3.12"
        platform:
        - ubuntu-latest
        - macos-latest
        - windows-latest
        include:
        - python: "3.9"
          platform: ubuntu-latest
        - python: "3.10"
          platform: ubuntu-latest
        - python: pypy3.9
          platform: ubuntu-latest
    runs-on: ${{ matrix.platform }}
    continue-on-error: ${{ matrix.python == '3.12' }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
          allow-prereleases: true
      - name: Install tox
        run: |
          python -m pip install tox
      - name: Run tests
        run: tox

  docs:
    runs-on: ubuntu-latest
    env:
      TOXENV: docs
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
      - name: Install tox
        run: |
          python -m pip install tox
      - name: Run tests
        run: tox

  test_cygwin:
    strategy:
      matrix:
        python:
        - 39
        platform:
        - windows-latest
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - name: Install Cygwin
        uses: cygwin/cygwin-install-action@v2
        with:
          platform: x86_64
          packages: >-
            python${{ matrix.python }},
            python${{ matrix.python }}-devel,
            python${{ matrix.python }}-pytest,
            python${{ matrix.python }}-tox,
            gcc-core,
            gcc-g++,
            ncompress
      - name: Run tests
        shell: C:\cygwin\bin\env.exe CYGWIN_NOWINPATH=1 CHERE_INVOKING=1 C:\cygwin\bin\bash.exe -leo pipefail -o igncr {0}
        run: tox

  ci_setuptools:
    # Integration testing with setuptools
    strategy:
      matrix:
        python:
        - "3.10"
        platform:
        - ubuntu-latest
    runs-on: ${{ matrix.platform }}
    env:
      SETUPTOOLS_USE_DISTUTILS: local
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - name: Install tox
        run: |
          python -m pip install tox
      - name: Check out pypa/setuptools
        uses: actions/checkout@v3
        with:
          repository: pypa/setuptools
          ref: main
          path: integration/setuptools
      - name: Replace vendored distutils
        run: |
          cd integration/setuptools/setuptools
          rm -rf _distutils
          cp -rp ../../../distutils _distutils
      - name: Run setuptools tests
        run: |
          cd integration/setuptools
          tox
        env:
          VIRTUALENV_NO_SETUPTOOLS: null

  check:  # This job does nothing and is only used for the branch protection
    if: always()

    needs:
    - test
    - docs
    - test_cygwin

    runs-on: ubuntu-latest

    steps:
    - name: Decide whether the needed jobs succeeded or failed
      uses: re-actors/alls-green@release/v1
      with:
        jobs: ${{ toJSON(needs) }}

  release:
    permissions:
      contents: write
    needs:
    - check
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11-dev
      - name: Install tox
        run: |
          python -m pip install tox
      - name: Release
        run: tox -e release
        env:
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
